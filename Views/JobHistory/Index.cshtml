@model IEnumerable<AlumniManagement.JobHistoryService.JobHistoryDTO>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<!-- Button untuk membuka modal -->
<button id="createButton" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
    Add Job History Modal
</button>

<button id="deleteSelected" class="btn btn-danger">
    Delete Selected
</button>

<table class="table" id="jobData">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.JobTitle)</th>
            <th>@Html.DisplayNameFor(model => model.Company)</th>
            <th>@Html.DisplayNameFor(model => model.StartDate)</th>
            <th>@Html.DisplayNameFor(model => model.EndDate)</th>
            <th>@Html.DisplayNameFor(model => model.Description)</th>
            <th>@Html.DisplayNameFor(model => model.ModifiedDate)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.JobTitle)</td>
                <td>@Html.DisplayFor(modelItem => item.Company)</td>
                <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.ModifiedDate)</td>
                <td>
                    <a href="#" class="editButton" data-id="@item.JobHistoryID" data-alumniid="@item.AlumniID"
                       data-jobtitle="@item.JobTitle" data-company="@item.Company"
                       data-startdate="@item.StartDate" data-enddate="@item.EndDate"
                       data-description="@item.Description">Edit</a> |
                    @Html.ActionLink("Delete", "Delete", new { id = item.JobHistoryID })
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal Create -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Create Job History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Create", "JobHistory", FormMethod.Post, new { id = "createForm", alumniID = ViewBag.AlumniID }))
                {
                    @Html.AntiForgeryToken()

                    <input type="hidden" name="AlumniID" value="@ViewBag.AlumniID" />

                    <div class="mb-3">
                        Job Title
                        @Html.TextBox("JobTitle", null, new { @class = "form-control", required = "required" })
                        <span class="text-danger" id="errorJobTitle"></span>
                    </div>

                    <div class="mb-3">
                        Company
                        @Html.TextBox("Company", null, new { @class = "form-control", required = "required" })
                        <span class="text-danger" id="errorCompany"></span>
                    </div>

                    <div class="mb-3">
                        Start Date
                        @Html.TextBox("StartDate", null, new { @class = "form-control", type = "date", required = "required" })
                        <span class="text-danger" id="errorStartDate"></span>
                    </div>

                    <div class="mb-3">
                        End Date
                        @Html.TextBox("EndDate", null, new { @class = "form-control", type = "date" })
                        <span class="text-danger" id="errorEndDate"></span>
                    </div>

                    <div class="mb-3">
                        Description
                        @Html.TextArea("Description", null, new { @class = "form-control", rows = "3" })
                        <span class="text-danger" id="errorDescription"></span>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Create</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@*Edit Modal*@
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Job History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Edit", "JobHistory", FormMethod.Post, new { id = "editForm", alumniID = ViewBag.AlumniID }))
                {
                    @Html.AntiForgeryToken()

                    <input type="hidden" id="editJobHistoryID" name="JobHistoryID" />
                    <input type="hidden" id="editAlumniID" name="AlumniID" />

                    <div class="mb-3">
                        Job Title
                        @Html.TextBox("JobTitle", null, new { @class = "form-control", id = "editJobTitle", required = "required" })
                        <span class="text-danger" id="errorEditJobTitle"></span>
                    </div>
                    <div class="mb-3">
                        Company
                        @Html.TextBox("Company", null, new { @class = "form-control", id = "editCompany", required = "required" })
                        <span class="text-danger" id="errorEditCompany"></span>
                    </div>
                    <div class="mb-3">
                        Start Date
                        @Html.TextBox("StartDate", null, new { @class = "form-control", type = "date", id = "editStartDate", required = "required" })
                        <span class="text-danger" id="errorEditStartDate"></span>
                    </div>
                    <div class="mb-3">
                        End Date
                        @Html.TextBox("EndDate", null, new { @class = "form-control", type = "date", id = "editEndDate" })
                        <span class="text-danger" id="errorEditEndDate"></span>
                    </div>
                    <div class="mb-3">
                        Description
                        @Html.TextArea("Description", null, new { @class = "form-control", rows = "3", id = "editDescription" })
                        <span class="text-danger" id="errorEditDescription"></span>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            $('#jobData').DataTable();

            $('#createForm').submit(function (e) {
                e.preventDefault();

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            $('#createModal').modal('hide');
                            $('#createForm')[0].reset();
                            $('#jobData').DataTable().ajax.reload();
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: "Job history created successfully",
                                timer: 3000,
                                timerProgressBar: true,
                                showConfirmButton: false
                            });
                        } else {
                            // Reset error messages
                            $('.text-danger').text('');

                            if (response.errors) {
                                Object.keys(response.errors).forEach(function (key) {
                                    $('#error' + key).text(response.errors[key]);
                                });
                            }
                    },
                    error: function (xhr) {
                        console.error(xhr.responseText);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while saving.',
                            showConfirmButton: true
                        });
                    }
                });
            });

            $(document).on("click", ".editButton", function () {
                $("#editJobHistoryID").val($(this).data("id"));
                $("#editAlumniID").val($(this).data("alumniid"));
                $("#editJobTitle").val($(this).data("jobtitle"));
                $("#editCompany").val($(this).data("company"));
                $("#editStartDate").val($(this).data("startdate"));
                $("#editEndDate").val($(this).data("enddate"));
                $("#editDescription").val($(this).data("description"));

                $("#editModal").modal("show");
            });

            $('#editForm').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            $('#editModal').modal('hide');
                            $('#jobData').DataTable().ajax.reload();
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: "Job history updated successfully",
                                timer: 3000,
                                timerProgressBar: true,
                                showConfirmButton: false
                            });
                        } else {
                            $('.text-danger').text('');
                            if (response.errors) {
                                Object.keys(response.errors).forEach(function (key) {
                                    $('#errorEdit' + key).text(response.errors[key]);
                                });
                            }
                        }
                    },
                    error: function (xhr) {
                        console.error(xhr.responseText);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while updating.',
                            showConfirmButton: true
                        });
                    }
                });
            });
        });
    </script>
}
