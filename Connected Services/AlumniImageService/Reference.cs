//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlumniManagement.AlumniImageService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlumniImageDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class AlumniImageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlumniIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlumniID {
            get {
                return this.AlumniIDField;
            }
            set {
                if ((this.AlumniIDField.Equals(value) != true)) {
                    this.AlumniIDField = value;
                    this.RaisePropertyChanged("AlumniID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageID {
            get {
                return this.ImageIDField;
            }
            set {
                if ((this.ImageIDField.Equals(value) != true)) {
                    this.ImageIDField = value;
                    this.RaisePropertyChanged("ImageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AlumniImageService.IAlumniImageService")]
    public interface IAlumniImageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlumniImageService/GetAllImages", ReplyAction="http://tempuri.org/IAlumniImageService/GetAllImagesResponse")]
        AlumniManagement.AlumniImageService.AlumniImageDTO[] GetAllImages(int alumniID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlumniImageService/GetAllImages", ReplyAction="http://tempuri.org/IAlumniImageService/GetAllImagesResponse")]
        System.Threading.Tasks.Task<AlumniManagement.AlumniImageService.AlumniImageDTO[]> GetAllImagesAsync(int alumniID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlumniImageService/GetImageByID", ReplyAction="http://tempuri.org/IAlumniImageService/GetImageByIDResponse")]
        AlumniManagement.AlumniImageService.AlumniImageDTO GetImageByID(int imageID, int alumniID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlumniImageService/GetImageByID", ReplyAction="http://tempuri.org/IAlumniImageService/GetImageByIDResponse")]
        System.Threading.Tasks.Task<AlumniManagement.AlumniImageService.AlumniImageDTO> GetImageByIDAsync(int imageID, int alumniID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlumniImageService/AddImage", ReplyAction="http://tempuri.org/IAlumniImageService/AddImageResponse")]
        void AddImage(AlumniManagement.AlumniImageService.AlumniImageDTO[] alumniImages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlumniImageService/AddImage", ReplyAction="http://tempuri.org/IAlumniImageService/AddImageResponse")]
        System.Threading.Tasks.Task AddImageAsync(AlumniManagement.AlumniImageService.AlumniImageDTO[] alumniImages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlumniImageService/DeleteIamgeByID", ReplyAction="http://tempuri.org/IAlumniImageService/DeleteIamgeByIDResponse")]
        void DeleteIamgeByID(int imageID, int alumniID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlumniImageService/DeleteIamgeByID", ReplyAction="http://tempuri.org/IAlumniImageService/DeleteIamgeByIDResponse")]
        System.Threading.Tasks.Task DeleteIamgeByIDAsync(int imageID, int alumniID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlumniImageServiceChannel : AlumniManagement.AlumniImageService.IAlumniImageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlumniImageServiceClient : System.ServiceModel.ClientBase<AlumniManagement.AlumniImageService.IAlumniImageService>, AlumniManagement.AlumniImageService.IAlumniImageService {
        
        public AlumniImageServiceClient() {
        }
        
        public AlumniImageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlumniImageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlumniImageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlumniImageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AlumniManagement.AlumniImageService.AlumniImageDTO[] GetAllImages(int alumniID) {
            return base.Channel.GetAllImages(alumniID);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.AlumniImageService.AlumniImageDTO[]> GetAllImagesAsync(int alumniID) {
            return base.Channel.GetAllImagesAsync(alumniID);
        }
        
        public AlumniManagement.AlumniImageService.AlumniImageDTO GetImageByID(int imageID, int alumniID) {
            return base.Channel.GetImageByID(imageID, alumniID);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.AlumniImageService.AlumniImageDTO> GetImageByIDAsync(int imageID, int alumniID) {
            return base.Channel.GetImageByIDAsync(imageID, alumniID);
        }
        
        public void AddImage(AlumniManagement.AlumniImageService.AlumniImageDTO[] alumniImages) {
            base.Channel.AddImage(alumniImages);
        }
        
        public System.Threading.Tasks.Task AddImageAsync(AlumniManagement.AlumniImageService.AlumniImageDTO[] alumniImages) {
            return base.Channel.AddImageAsync(alumniImages);
        }
        
        public void DeleteIamgeByID(int imageID, int alumniID) {
            base.Channel.DeleteIamgeByID(imageID, alumniID);
        }
        
        public System.Threading.Tasks.Task DeleteIamgeByIDAsync(int imageID, int alumniID) {
            return base.Channel.DeleteIamgeByIDAsync(imageID, alumniID);
        }
    }
}
