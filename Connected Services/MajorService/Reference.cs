//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlumniManagement.MajorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MajorDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class MajorDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FacultyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacultyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MajorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MajorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((this.FacultyIDField.Equals(value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacultyName {
            get {
                return this.FacultyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyNameField, value) != true)) {
                    this.FacultyNameField = value;
                    this.RaisePropertyChanged("FacultyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MajorID {
            get {
                return this.MajorIDField;
            }
            set {
                if ((this.MajorIDField.Equals(value) != true)) {
                    this.MajorIDField = value;
                    this.RaisePropertyChanged("MajorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MajorName {
            get {
                return this.MajorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MajorNameField, value) != true)) {
                    this.MajorNameField = value;
                    this.RaisePropertyChanged("MajorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MajorService.IMajorServices")]
    public interface IMajorServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/GetMajors", ReplyAction="http://tempuri.org/IMajorServices/GetMajorsResponse")]
        AlumniManagement.MajorService.MajorDTO[] GetMajors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/GetMajors", ReplyAction="http://tempuri.org/IMajorServices/GetMajorsResponse")]
        System.Threading.Tasks.Task<AlumniManagement.MajorService.MajorDTO[]> GetMajorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/GetMajorByID", ReplyAction="http://tempuri.org/IMajorServices/GetMajorByIDResponse")]
        AlumniManagement.MajorService.MajorDTO GetMajorByID(int majorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/GetMajorByID", ReplyAction="http://tempuri.org/IMajorServices/GetMajorByIDResponse")]
        System.Threading.Tasks.Task<AlumniManagement.MajorService.MajorDTO> GetMajorByIDAsync(int majorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/GetMajorIdByName", ReplyAction="http://tempuri.org/IMajorServices/GetMajorIdByNameResponse")]
        AlumniManagement.MajorService.MajorDTO GetMajorIdByName(string majorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/GetMajorIdByName", ReplyAction="http://tempuri.org/IMajorServices/GetMajorIdByNameResponse")]
        System.Threading.Tasks.Task<AlumniManagement.MajorService.MajorDTO> GetMajorIdByNameAsync(string majorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/AddMajor", ReplyAction="http://tempuri.org/IMajorServices/AddMajorResponse")]
        void AddMajor(AlumniManagement.MajorService.MajorDTO major);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/AddMajor", ReplyAction="http://tempuri.org/IMajorServices/AddMajorResponse")]
        System.Threading.Tasks.Task AddMajorAsync(AlumniManagement.MajorService.MajorDTO major);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/UpdateMajor", ReplyAction="http://tempuri.org/IMajorServices/UpdateMajorResponse")]
        void UpdateMajor(AlumniManagement.MajorService.MajorDTO major);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/UpdateMajor", ReplyAction="http://tempuri.org/IMajorServices/UpdateMajorResponse")]
        System.Threading.Tasks.Task UpdateMajorAsync(AlumniManagement.MajorService.MajorDTO major);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/DeleteMajor", ReplyAction="http://tempuri.org/IMajorServices/DeleteMajorResponse")]
        void DeleteMajor(int majorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMajorServices/DeleteMajor", ReplyAction="http://tempuri.org/IMajorServices/DeleteMajorResponse")]
        System.Threading.Tasks.Task DeleteMajorAsync(int majorID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMajorServicesChannel : AlumniManagement.MajorService.IMajorServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MajorServicesClient : System.ServiceModel.ClientBase<AlumniManagement.MajorService.IMajorServices>, AlumniManagement.MajorService.IMajorServices {
        
        public MajorServicesClient() {
        }
        
        public MajorServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MajorServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MajorServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MajorServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AlumniManagement.MajorService.MajorDTO[] GetMajors() {
            return base.Channel.GetMajors();
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.MajorService.MajorDTO[]> GetMajorsAsync() {
            return base.Channel.GetMajorsAsync();
        }
        
        public AlumniManagement.MajorService.MajorDTO GetMajorByID(int majorID) {
            return base.Channel.GetMajorByID(majorID);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.MajorService.MajorDTO> GetMajorByIDAsync(int majorID) {
            return base.Channel.GetMajorByIDAsync(majorID);
        }
        
        public AlumniManagement.MajorService.MajorDTO GetMajorIdByName(string majorName) {
            return base.Channel.GetMajorIdByName(majorName);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.MajorService.MajorDTO> GetMajorIdByNameAsync(string majorName) {
            return base.Channel.GetMajorIdByNameAsync(majorName);
        }
        
        public void AddMajor(AlumniManagement.MajorService.MajorDTO major) {
            base.Channel.AddMajor(major);
        }
        
        public System.Threading.Tasks.Task AddMajorAsync(AlumniManagement.MajorService.MajorDTO major) {
            return base.Channel.AddMajorAsync(major);
        }
        
        public void UpdateMajor(AlumniManagement.MajorService.MajorDTO major) {
            base.Channel.UpdateMajor(major);
        }
        
        public System.Threading.Tasks.Task UpdateMajorAsync(AlumniManagement.MajorService.MajorDTO major) {
            return base.Channel.UpdateMajorAsync(major);
        }
        
        public void DeleteMajor(int majorID) {
            base.Channel.DeleteMajor(majorID);
        }
        
        public System.Threading.Tasks.Task DeleteMajorAsync(int majorID) {
            return base.Channel.DeleteMajorAsync(majorID);
        }
    }
}
